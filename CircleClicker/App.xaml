<Application
    x:Class="CircleClicker.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:CircleClicker.Utils.Converters"
    xmlns:selectors="clr-namespace:CircleClicker.Utils.Selectors"
    Startup="Application_Startup">

    <Application.Resources>
        <!--#region Resources-->
        <converters:BooleanToVisibilityConverterEx x:Key="BooleanToVisibilityConverter" />
        <converters:MultiplierConverter x:Key="MultiplierConverter" />
        <converters:SuffixFormatter x:Key="SuffixFormatter" />
        <converters:StringFormatMultiConverter x:Key="StringFormatMultiConverter" />
        <selectors:SettingDataTemplateSelector x:Key="SettingDataTemplateSelector" />

        <Color x:Key="BackgroundColor">#161719</Color>
        <Color x:Key="ControlColor">#222326</Color>
        <Color x:Key="BorderColor">#55575e</Color>
        <Color x:Key="BrightBorderColor">#83858c</Color>
        <Color x:Key="DimForegroundColor">#66fffcf9</Color>
        <Color x:Key="ForegroundColor">#fffcf9</Color>
        <Color x:Key="DarkSquareColor">#2424b2</Color>
        <Color x:Key="SquareColor">#9c2feb</Color>
        <Color x:Key="BrightSquareColor">#f230e2</Color>
        <Color x:Key="DarkAccentColor">#b21114</Color>
        <Color x:Key="AccentColor">#dd1619</Color>
        <Color x:Key="BrightAccentColor">#ff2b2e</Color>

        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
        <SolidColorBrush x:Key="ControlBrush" Color="{StaticResource ControlColor}" />
        <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />
        <SolidColorBrush x:Key="BrightBorderBrush" Color="{StaticResource BrightBorderColor}" />
        <SolidColorBrush x:Key="DimForegroundBrush" Color="{StaticResource DimForegroundColor}" />
        <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}" />
        <LinearGradientBrush x:Key="SquareBrush" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Color="{StaticResource DarkSquareColor}" />
            <GradientStop Offset="1" Color="{StaticResource SquareColor}" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="AccentBrush" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Color="{StaticResource DarkAccentColor}" />
            <GradientStop Offset="1" Color="{StaticResource AccentColor}" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="BrightAccentBrush" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Color="{StaticResource AccentColor}" />
            <GradientStop Offset="1" Color="{StaticResource BrightAccentColor}" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="TransparentAccentBrush" Opacity="0.4" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Color="{StaticResource DarkAccentColor}" />
            <GradientStop Offset="1" Color="{StaticResource AccentColor}" />
        </LinearGradientBrush>

        <ResourceDictionary x:Key="RoundedCorners">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="18" />
            </Style>
        </ResourceDictionary>
        <ResourceDictionary x:Key="FullyRoundedCorners">
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource MultiplierConverter}, ConverterParameter=0.5}" />
            </Style>
        </ResourceDictionary>
        <!--#endregion-->

        <!--#region Templates-->
        <DataTemplate x:Key="TabHeaderWithNotice" DataType="TabItem">
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{Binding ContentStringFormat, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}" />
                <Label
                    x:Name="notice"
                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                    Margin="6,0,0,0"
                    Padding="0"
                    HorizontalContentAlignment="Center"
                    Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}"
                    Content="{Binding}"
                    Resources="{StaticResource FullyRoundedCorners}"
                    Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                    <Setter TargetName="notice" Property="Background" Value="{StaticResource ForegroundBrush}" />
                    <Setter TargetName="notice" Property="Foreground" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="TabHeaderWithCount" DataType="TabItem">
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{Binding ContentStringFormat, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}" />
                <TextBlock Foreground="{StaticResource DimForegroundBrush}" Text="{Binding}" />
            </StackPanel>
        </DataTemplate>
        <!--#endregion-->

        <!--#region Styles-->
        <Style x:Key="TitleStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0,0,0,10" />
        </Style>

        <Style x:Key="WindowStyle" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Segoe UI Variable Display" />
        </Style>

        <Style
            x:Key="ErrorStyle"
            Resources="{StaticResource RoundedCorners}"
            TargetType="Label">
            <Setter Property="Margin" Value="0,16,0,0" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Background" Value="{StaticResource TransparentAccentBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
        </Style>
        <!--#endregion Styles-->

        <!--#region Global Styles-->
        <Style TargetType="Hyperlink">
            <EventSetter Event="RequestNavigate" Handler="Hyperlink_RequestNavigate" />
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
            <Setter Property="ToolTip" Value="{Binding NavigateUri, RelativeSource={RelativeSource Self}}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource BrightAccentBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>

        <Style TargetType="Label">
            <Setter Property="Padding" Value="16,10,16,8" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style Resources="{StaticResource RoundedCorners}" TargetType="TextBox">
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="Background" Value="{StaticResource ControlBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource BrightBorderBrush}" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Background" Value="{StaticResource ControlBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="18">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource BrightBorderBrush}" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style Resources="{StaticResource RoundedCorners}" TargetType="Button">
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Margin" Value="0,16,0,0" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Background" Value="{StaticResource AccentBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Name="border"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource ControlBrush}" />
                    <Setter Property="Foreground" Value="{StaticResource DimForegroundBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource BrightAccentBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style Resources="{StaticResource FullyRoundedCorners}" TargetType="ProgressBar">
            <Setter Property="Height" Value="8" />
            <Setter Property="Margin" Value="0,12,0,0" />
            <Setter Property="Background" Value="{StaticResource ControlBrush}" />
            <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid x:Name="TemplateRoot">
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=Background}" />
                            </Grid.OpacityMask>
                            <Border
                                x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <Rectangle x:Name="PART_Track" />
                            <Grid
                                x:Name="PART_Indicator"
                                HorizontalAlignment="Left"
                                ClipToBounds="true">
                                <Border x:Name="Indicator" Background="{TemplateBinding Foreground}" />
                                <Border
                                    x:Name="Animation"
                                    Background="{TemplateBinding Foreground}"
                                    CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource MultiplierConverter}, ConverterParameter=2}"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                </Border>
                            </Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DataGrid">
            <Style.Resources>
                <Style
                    x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                 TypeInTargetAssembly={x:Type DataGrid}}"
                    BasedOn="{StaticResource {x:Type Button}}"
                    TargetType="Button">
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="0" />
                        </Style>
                    </Style.Resources>
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="ToolTip" Value="Select All" />
                    <Setter Property="Background" Value="{StaticResource TransparentAccentBrush}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="RowBackground" Value="{StaticResource BackgroundBrush}" />
            <Setter Property="AlternatingRowBackground" Value="{StaticResource ControlBrush}" />
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource TransparentAccentBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            <Setter Property="BorderThickness" Value="0,1,1,1" />
            <Setter Property="Padding" Value="10,6" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>

        <Style TargetType="DataGridRowHeader">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource DimForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="1,0,1,1" />
            <Setter Property="Padding" Value="8,0" />
        </Style>

        <Style TargetType="DataGridRow">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource TransparentAccentBrush}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridCell">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="Padding" Value="8,6" />
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                    <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush}" />
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style TargetType="TabControl">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Background" Value="{StaticResource AccentBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border
                            x:Name="Border"
                            Background="{StaticResource ControlBrush}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="12,12,0,0">
                            <ContentPresenter
                                Name="ContentSite"
                                Margin="12,6"
                                ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Padding" Value="1" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                                <Setter TargetName="Border" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource TransparentAccentBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="ListView">
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>-->

        <Style TargetType="ItemsControl">
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ItemsControl">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Border">
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        </Style>

        <Style TargetType="Expander">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <ToggleButton
                                    x:Name="ExpanderButton"
                                    Content="{TemplateBinding Header}"
                                    DockPanel.Dock="Top"
                                    IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <!--<Ellipse
                                                    x:Name="circle"
                                                    Width="22"
                                                    Height="22"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Fill="{StaticResource ControlBrush}"
                                                    Stroke="{StaticResource BorderBrush}" />-->
                                                <Path
                                                    x:Name="arrow"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Data="M 0 0 L 5 5 L 10 0 Z"
                                                    Fill="{StaticResource ForegroundBrush}" />
                                                <ContentPresenter
                                                    x:Name="HeaderContent"
                                                    Grid.Column="1"
                                                    Margin="8,0,0,0"
                                                    VerticalAlignment="Center" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="arrow" Property="Data" Value="M 0 5 L 10 5 L 5 0 Z" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="arrow" Property="Fill" Value="{StaticResource BrightBorderBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <ContentPresenter
                                    x:Name="ExpanderContent"
                                    DockPanel.Dock="Bottom"
                                    Visibility="Collapsed" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region ScrollBar-->
        <Style x:Key="ScrollBarLineButton" TargetType="RepeatButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border>
                            <Path
                                x:Name="Arrow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                Fill="{StaticResource BorderBrush}" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource BrightBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="Thumb">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border
                            x:Name="Border"
                            Margin="{TemplateBinding Padding}"
                            Background="{StaticResource BorderBrush}"
                            CornerRadius="4" />

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource BrightBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="12" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="12" />
                </Grid.RowDefinitions>
                <Border
                    x:Name="bg"
                    Grid.RowSpan="3"
                    Background="{StaticResource ControlBrush}" />
                <RepeatButton
                    Grid.Row="0"
                    Command="ScrollBar.LineUpCommand"
                    Content="M 0 4 L 8 4 L 4 0 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
                <Track
                    x:Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Padding="3,0" Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Row="2"
                    Command="ScrollBar.LineDownCommand"
                    Content="M 0 0 L 4 4 L 8 0 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="12" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="12" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="bg"
                    Grid.ColumnSpan="3"
                    Background="{StaticResource ControlBrush}" />
                <RepeatButton
                    Grid.Column="0"
                    Command="ScrollBar.LineLeftCommand"
                    Content="M 4 0 L 4 8 L 0 4 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
                <Track
                    x:Name="PART_Track"
                    Grid.Column="1"
                    IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Padding="0,3"
                            Background="{StaticResource BorderBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Column="2"
                    Command="ScrollBar.LineRightCommand"
                    Content="M 0 0 L 4 4 L 0 8 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
            </Grid>
        </ControlTemplate>

        <Style TargetType="ScrollBar">

            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="12" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="12" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ScrollViewer">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource ControlColor}" />
            </Style.Resources>
        </Style>
        <!--#endregion-->
        <!--#endregion-->
    </Application.Resources>
</Application>
