<Window
    x:Class="CircleClicker.UI.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:controls="clr-namespace:CircleClicker.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:db="clr-namespace:CircleClicker.Models.Database"
    xmlns:local="clr-namespace:CircleClicker"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=netstandard"
    xmlns:windows="clr-namespace:CircleClicker.UI.Windows"
    Title="Circle Clicker"
    Width="1280"
    Height="720"
    d:DataContext="{d:DesignInstance Type=windows:MainWindow}"
    Closing="Window_Closing"
    Style="{StaticResource WindowStyle}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <d:ResourceDictionary>
                    <x:Array x:Key="DesignBuildings" Type="db:Building">
                        <db:Building
                            Name="Example Building"
                            BaseCost="1.234"
                            BaseProduction="1.234" />
                        <db:Building
                            Name="Example Building 2"
                            BaseCost="1234.567"
                            BaseProduction="1234.567" />
                        <db:Building
                            Name="Example Building 3"
                            BaseCost="1234567"
                            BaseProduction="1234567" />
                        <db:Building
                            Name="Example Building 4"
                            BaseCost="1234567890"
                            BaseProduction="1234567890" />
                        <db:Building
                            Name="Example Building 5"
                            BaseCost="1234567890123"
                            BaseProduction="1234567890123" />
                        <db:Building
                            Name="Example Building 6"
                            BaseCost="1234567890123456"
                            BaseProduction="1234567890123456" />
                        <db:Building
                            Name="Example Building 7"
                            BaseCost="1234567890123456789"
                            BaseProduction="1234567890123456789" />
                        <db:Building
                            Name="Example Building 8"
                            BaseCost="1234567890123456789012"
                            BaseProduction="1234567890123456789012" />
                    </x:Array>
                    <x:Array x:Key="DesignUpgrades" Type="db:Upgrade">
                        <db:Upgrade
                            Name="Example Upgrade"
                            BaseCost="1234567"
                            Description="Lorem ipsum dolor sit amet x1.00 ➝ x2.00" />
                    </x:Array>
                </d:ResourceDictionary>

                <ResourceDictionary>
                    <CollectionViewSource
                        x:Key="cvs_buildings"
                        x:Name="cvs_buildings"
                        Filter="cvs_buildings_Filter"
                        IsLiveFilteringRequested="True"
                        IsLiveSortingRequested="True"
                        Source="{Binding Main.Buildings}">
                        <CollectionViewSource.SortDescriptions>
                            <cm:SortDescription Direction="Ascending" PropertyName="BaseProduction" />
                        </CollectionViewSource.SortDescriptions>
                        <CollectionViewSource.LiveFilteringProperties>
                            <sys:String>IsUnlocked</sys:String>
                        </CollectionViewSource.LiveFilteringProperties>
                    </CollectionViewSource>

                    <!--  TODO: consider merging these into one template  -->
                    <DataTemplate x:Key="BuildingTemplate" DataType="db:Building">
                        <Border
                            Padding="12,7,12,13"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="0,0,0,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <TextBlock
                                    FontSize="18"
                                    FontWeight="Bold"
                                    Text="{Binding Name}" />
                                <TextBlock
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    FontSize="16"
                                    Text="{Binding AmountText, FallbackValue=Level 0}" />
                                <TextBlock
                                    Grid.Row="1"
                                    VerticalAlignment="Center"
                                    Foreground="{StaticResource DimForegroundBrush}"
                                    TextWrapping="Wrap">
                                    <Run Text="Base:" />
                                    <Run Text="{Binding Value, Converter={StaticResource SuffixFormatter}, StringFormat=⚫ {0}/s, Mode=OneWay}" />
                                    <LineBreak />
                                    <Run Text="Total:" />
                                    <Run Text="{Binding Production, Converter={StaticResource SuffixFormatter}, StringFormat=⚫ {0}/s, Mode=OneWay}" />
                                </TextBlock>

                                <Button
                                    Name="btn_buyBuilding"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Margin="10,4,0,0"
                                    HorizontalAlignment="Right"
                                    Click="btn_buy_Click"
                                    Content="{Binding CostText, TargetNullValue=⚫ 123\,456}"
                                    ContentStringFormat="Buy for {0}"
                                    IsEnabled="{Binding CanAfford}" />
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="UpgradeTemplate" DataType="db:Upgrade">
                        <Border
                            Padding="12,7,12,13"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="0,0,0,1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>-->

                                <TextBlock
                                    FontSize="18"
                                    FontWeight="Bold"
                                    Text="{Binding Name}" />
                                <TextBlock
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    FontSize="16"
                                    Text="{Binding AmountText}" />
                                <TextBlock
                                    Grid.Row="1"
                                    Foreground="{StaticResource DimForegroundBrush}"
                                    Text="{Binding Description}"
                                    TextWrapping="Wrap" />

                                <Button
                                    Name="btn_buyUpgrade"
                                    Grid.Row="2"
                                    Grid.ColumnSpan="2"
                                    Margin="0,8,0,0"
                                    HorizontalAlignment="Center"
                                    Click="btn_buy_Click"
                                    Content="{Binding CostText, TargetNullValue=⚫ 123\,456}"
                                    ContentStringFormat="Buy for {0}"
                                    IsEnabled="{Binding CanAfford}" />
                                <Button
                                    Name="btn_removeUpgrade"
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    Margin="0,8,0,0"
                                    HorizontalAlignment="Right"
                                    Click="btn_removeUpgrade_Click"
                                    IsEnabled="{Binding IsPurchased}"
                                    Visibility="{Binding IsAdmin, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type windows:MainWindow}}}">
                                    -1
                                </Button>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="20,16">
        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="100" />
            <RowDefinition />
            <RowDefinition MaxHeight="100" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="360" />
            <ColumnDefinition />
            <ColumnDefinition MaxWidth="360" />
        </Grid.ColumnDefinitions>

        <!--  Setting IsHitTestVisible to false will prevent particles from eating mouse inputs  -->
        <Canvas
            Name="cnvs"
            Grid.RowSpan="3"
            Grid.Column="1"
            Panel.ZIndex="1"
            IsHitTestVisible="False" />

        <!--#region Stats-->
        <WrapPanel
            Name="wp_stats"
            Grid.Column="1"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <d:WrapPanel.Children>
                <controls:CurrencyDisplay />
                <controls:CurrencyDisplay />
                <controls:CurrencyDisplay />
            </d:WrapPanel.Children>
        </WrapPanel>

        <!--<StackPanel
            Grid.Column="1"
            HorizontalAlignment="Center">
            <StackPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="Foreground" Value="{StaticResource DimForegroundBrush}" />
                </Style>
            </StackPanel.Resources>
            <TextBlock
                FontSize="28"
                FontWeight="Bold"
                Foreground="{StaticResource ForegroundBrush}"
                Text="{Binding Save.Circles, Converter={StaticResource SuffixFormatter}, StringFormat=⚫ {0}, FallbackValue=⚫ Unknown}" />
            <TextBlock
                FontSize="16"
                Foreground="{StaticResource ForegroundBrush}"
                Text="{Binding Main.TotalProduction, Converter={StaticResource SuffixFormatter}, StringFormat=⚫ {0}/s, FallbackValue=⚫ Unknown/s}" />
            <TextBlock Text="{Binding Save.TotalCircles, Converter={StaticResource SuffixFormatter}, StringFormat=Total circles: ⚫ {0}, FallbackValue=Total circles: ⚫ Unknown}" />
            <TextBlock Text="{Binding Save.Clicks, StringFormat=Clicks: {0:N0}, FallbackValue=Clicks: Unknown}" />
        </StackPanel>-->
        <!--#endregion-->

        <!--#region Buildings-->
        <Border Grid.RowSpan="3" BorderThickness="0,0,1,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Style="{StaticResource TitleStyle}">Buildings</TextBlock>
                <ItemsControl
                    Name="ic_buildings"
                    Grid.Row="2"
                    d:ItemsSource="{StaticResource DesignBuildings}"
                    BorderBrush="{StaticResource BorderBrush}"
                    BorderThickness="0,1,0,0"
                    ItemTemplate="{StaticResource BuildingTemplate}"
                    ItemsSource="{Binding Source={StaticResource cvs_buildings}}" />
            </Grid>
        </Border>
        <!--#endregion-->

        <!--#region Upgrades-->
        <Border
            Grid.RowSpan="3"
            Grid.Column="2"
            BorderThickness="1,0,0,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Style="{StaticResource TitleStyle}">Upgrades</TextBlock>
                <TabControl
                    Name="tc_upgrades"
                    Grid.Row="1"
                    BorderBrush="{StaticResource BorderBrush}"
                    BorderThickness="0,1,0,0">
                    <d:TabControl.Items>
                        <TabItem
                            Header="1"
                            HeaderStringFormat="Circles"
                            HeaderTemplate="{StaticResource TabHeaderWithNotice}">
                            <ItemsControl
                                Name="ic_availableUpgrades"
                                d:ItemsSource="{StaticResource DesignUpgrades}"
                                ItemTemplate="{StaticResource UpgradeTemplate}" />
                        </TabItem>
                        <TabItem
                            Header=" (0/1)"
                            HeaderStringFormat="Purchased"
                            HeaderTemplate="{StaticResource TabHeaderWithCount}">
                            <ItemsControl
                                Name="ic_unlockedUpgrades"
                                d:ItemsSource="{StaticResource DesignUpgrades}"
                                ItemTemplate="{StaticResource UpgradeTemplate}" />
                        </TabItem>
                    </d:TabControl.Items>
                </TabControl>
            </Grid>
        </Border>
        <!--#endregion-->

        <!--#region Buttons-->
        <Button
            Name="btn_clicker"
            Grid.Row="1"
            Grid.Column="1"
            Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
            MaxWidth="300"
            MaxHeight="300"
            Margin="20"
            Click="btn_clicker_Click"
            FontSize="20"
            PreviewMouseLeftButtonDown="btn_clicker_PreviewMouseLeftButtonDown"
            PreviewMouseLeftButtonUp="btn_clicker_PreviewMouseLeftButtonUp"
            RenderTransformOrigin="0.5, 0.5">
            <Button.RenderTransform>
                <ScaleTransform />
            </Button.RenderTransform>
            Click me to get circles!
            <Button.Resources>
                <Style
                    BasedOn="{StaticResource {x:Type Button}}"
                    Resources="{StaticResource FullyRoundedCorners}"
                    TargetType="Button">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.04"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.04"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.02"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.02"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.04"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.04"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Resources>
        </Button>

        <StackPanel
            Grid.Row="2"
            Grid.Column="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Orientation="Horizontal">

            <StackPanel.Resources>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                    <Setter Property="Margin" Value="5,10,5,0" />
                </Style>
            </StackPanel.Resources>

            <Button
                Name="btn_reincarnate"
                Grid.Row="2"
                Grid.Column="1"
                Padding="0"
                Click="btn_reincarnate_Click"
                IsEnabled="{Binding Main.CanReincarnate, FallbackValue=False}">
                <Button.Resources>
                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Background" Value="{StaticResource SquareBrush}" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.GradientStops[0].Color" Duration="0:0:2.5">
                                                <EasingColorKeyFrame KeyTime="0%" Value="{StaticResource DarkSquareColor}">
                                                    <EasingColorKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingColorKeyFrame.EasingFunction>
                                                </EasingColorKeyFrame>
                                                <EasingColorKeyFrame KeyTime="100%" Value="{StaticResource SquareColor}">
                                                    <EasingColorKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingColorKeyFrame.EasingFunction>
                                                </EasingColorKeyFrame>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.GradientStops[1].Color" Duration="0:0:2.5">
                                                <EasingColorKeyFrame KeyTime="0%" Value="{StaticResource SquareColor}">
                                                    <EasingColorKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingColorKeyFrame.EasingFunction>
                                                </EasingColorKeyFrame>
                                                <EasingColorKeyFrame KeyTime="100%" Value="{StaticResource BrightSquareColor}">
                                                    <EasingColorKeyFrame.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseInOut" />
                                                    </EasingColorKeyFrame.EasingFunction>
                                                </EasingColorKeyFrame>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>

                <Grid>
                    <ProgressBar
                        Height="Auto"
                        Margin="0"
                        Foreground="{StaticResource SquareBrush}"
                        Visibility="{Binding Main.CanReincarnate, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Collapsed;Visible, FallbackValue=Visible}"
                        Value="{Binding Main.ReincarnateProgress, Mode=OneWay, FallbackValue=50}" />
                    <TextBlock
                        Padding="16,8"
                        VerticalAlignment="Center"
                        Text="{Binding Main.PendingSquaresText, FallbackValue=Reincarnate!}" />
                </Grid>
            </Button>

            <Button
                Name="btn_admin"
                Grid.Row="2"
                Grid.Column="1"
                HorizontalAlignment="Center"
                Click="btn_admin_Click">
                Open Admin Panel
            </Button>
        </StackPanel>

        <!--#endregion-->
    </Grid>
</Window>
