<Window
    x:Class="CircleClicker.UI.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:audio="clr-namespace:CircleClicker.Utils.Audio"
    xmlns:controls="clr-namespace:CircleClicker.UI.Controls"
    xmlns:db="clr-namespace:CircleClicker.Models.Database"
    xmlns:models="clr-namespace:CircleClicker.Models"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:windows="clr-namespace:CircleClicker.UI.Windows"
    Title="Circle Clicker"
    Width="1280"
    Height="720"
    MinWidth="960"
    MinHeight="600"
    d:DataContext="{d:DesignInstance Type=windows:MainWindow}"
    Closing="Window_Closing"
    Style="{StaticResource WindowStyle}"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    mc:Ignorable="d">

    <Window.Resources>
        <CollectionViewSource
            x:Key="cvs_buildings"
            x:Name="cvs_buildings"
            Filter="cvs_buildings_Filter"
            IsLiveFilteringRequested="True"
            IsLiveSortingRequested="True"
            Source="{Binding Main.Buildings}">

            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription Direction="Ascending" PropertyName="BaseProduction" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.LiveFilteringProperties>
                <sys:String>IsUnlocked</sys:String>
            </CollectionViewSource.LiveFilteringProperties>
        </CollectionViewSource>

        <DataTemplate x:Key="PurchaseTemplate" DataType="db:Purchase">
            <Border
                Padding="12,7,12,13"
                BorderBrush="{StaticResource BorderBrush}"
                BorderThickness="0,0,0,1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBlock Style="{StaticResource SubtitleStyle}" Text="{Binding Name}" />
                    <TextBlock
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding AmountText, UpdateSourceTrigger=PropertyChanged}" />
                    <controls:RichTextBlock
                        Grid.Row="1"
                        Foreground="{StaticResource DimForegroundBrush}"
                        Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" />

                    <Button
                        Name="btn_buy"
                        Grid.Row="2"
                        Grid.ColumnSpan="2"
                        Margin="0,8,0,0"
                        HorizontalAlignment="Center"
                        Click="btn_buy_Click"
                        IsEnabled="{Binding CanAfford}">

                        <controls:RichTextBlock Text="{Binding CostText, UpdateSourceTrigger=PropertyChanged}" />
                    </Button>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="FloatSettingTemplate" DataType="models:FloatSetting">
            <Grid Margin="0,3,0,7">
                <Label
                    Padding="0"
                    VerticalAlignment="Center"
                    Content="{Binding Name}" />
                <controls:FloatEntryControl
                    MinWidth="100"
                    HorizontalAlignment="Right"
                    Maximum="{Binding Maximum}"
                    Minimum="{Binding Minimum}"
                    Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <Grid Margin="20,16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="110" />
            <RowDefinition />
            <RowDefinition Height="Auto" MinHeight="110" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="365" />
            <ColumnDefinition />
            <ColumnDefinition MaxWidth="365" />
        </Grid.ColumnDefinitions>

        <!--  Setting IsHitTestVisible to false will prevent particles from eating mouse inputs  -->
        <Canvas
            Name="cnvs"
            Grid.RowSpan="3"
            Grid.Column="1"
            Panel.ZIndex="1"
            IsHitTestVisible="False" />

        <!--#region Currencies-->
        <WrapPanel
            Name="wp_stats"
            Grid.Column="1"
            HorizontalAlignment="Center"
            Orientation="Horizontal">

            <d:WrapPanel.Children>
                <controls:CurrencyDisplay DataContext="{x:Static models:Currency.Circles}" />
                <controls:CurrencyDisplay DataContext="{x:Static models:Currency.Triangles}" Visibility="Visible" />
                <controls:CurrencyDisplay DataContext="{x:Static models:Currency.Squares}" Visibility="Visible" />
            </d:WrapPanel.Children>
        </WrapPanel>

        <!--<StackPanel
            Grid.Column="1"
            HorizontalAlignment="Center">
            <StackPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="Foreground" Value="{StaticResource DimForegroundBrush}" />
                </Style>
            </StackPanel.Resources>
            <TextBlock
                FontSize="28"
                FontWeight="Bold"
                Foreground="{StaticResource ForegroundBrush}"
                Text="{Binding Save.Circles, Converter={StaticResource SuffixFormatter}, StringFormat=⚫ {0}, FallbackValue=⚫ Unknown}" />
            <TextBlock
                FontSize="16"
                Foreground="{StaticResource ForegroundBrush}"
                Text="{Binding Main.TotalProduction, Converter={StaticResource SuffixFormatter}, StringFormat=⚫ {0}/s, FallbackValue=⚫ Unknown/s}" />
            <TextBlock Text="{Binding Save.TotalCircles, Converter={StaticResource SuffixFormatter}, StringFormat=Total circles: ⚫ {0}, FallbackValue=Total circles: ⚫ Unknown}" />
            <TextBlock Text="{Binding Save.Clicks, StringFormat=Clicks: {0:N0}, FallbackValue=Clicks: Unknown}" />
        </StackPanel>-->
        <!--#endregion-->

        <!--#region Buildings-->
        <Border Grid.RowSpan="3" BorderThickness="0,0,1,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Style="{StaticResource TitleStyle}">Buildings</TextBlock>
                <ItemsControl
                    Name="ic_buildings"
                    Grid.Row="2"
                    BorderBrush="{StaticResource BorderBrush}"
                    BorderThickness="0,1,0,0"
                    ItemTemplate="{StaticResource PurchaseTemplate}"
                    ItemsSource="{Binding Source={StaticResource cvs_buildings}}">
                    <d:ItemsControl.ItemsSource>
                        <x:Array Type="db:Building">
                            <db:Building
                                Name="Example Building"
                                BaseCost="1.234"
                                BaseProduction="1.234" />
                            <db:Building
                                Name="Example Building 2"
                                BaseCost="1234.567"
                                BaseProduction="1234.567" />
                            <db:Building
                                Name="Example Building 3"
                                BaseCost="1234567"
                                BaseProduction="1234567" />
                            <db:Building
                                Name="Example Building 4"
                                BaseCost="1234567890"
                                BaseProduction="1234567890" />
                            <db:Building
                                Name="Example Building 5"
                                BaseCost="1234567890123"
                                BaseProduction="1234567890123" />
                            <db:Building
                                Name="Example Building 6"
                                BaseCost="1234567890123456"
                                BaseProduction="1234567890123456" />
                            <db:Building
                                Name="Example Building 7"
                                BaseCost="1234567890123456789"
                                BaseProduction="1234567890123456789" />
                            <db:Building
                                Name="Example Building 8"
                                BaseCost="1234567890123456789012"
                                BaseProduction="1234567890123456789012" />
                        </x:Array>
                    </d:ItemsControl.ItemsSource>
                </ItemsControl>
            </Grid>
        </Border>
        <!--#endregion-->

        <!--#region Upgrades-->
        <Border
            Grid.RowSpan="3"
            Grid.Column="2"
            BorderThickness="1,0,0,0">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Style="{StaticResource TitleStyle}">Upgrades</TextBlock>
                <TabControl
                    Name="tc_upgrades"
                    Grid.Row="1"
                    BorderBrush="{StaticResource BorderBrush}"
                    BorderThickness="0,1,0,0">
                    <d:TabControl.Items>
                        <TabItem
                            Header="1"
                            HeaderStringFormat="Circles"
                            HeaderTemplate="{StaticResource TabHeaderWithNotice}">
                            <ItemsControl Name="ic_availableUpgrades" ItemTemplate="{StaticResource PurchaseTemplate}">
                                <d:ItemsControl.ItemsSource>
                                    <x:Array Type="db:Upgrade">
                                        <db:Upgrade
                                            Name="Example Upgrade"
                                            BaseCost="1234567"
                                            DesignDescription="Lorem ipsum dolor sit amet x1.00 ➝ x2.00" />
                                    </x:Array>
                                </d:ItemsControl.ItemsSource>
                            </ItemsControl>
                        </TabItem>
                        <TabItem
                            Header=" (0/1)"
                            HeaderStringFormat="Purchased"
                            HeaderTemplate="{StaticResource TabHeaderWithCount}">
                            <ItemsControl Name="ic_unlockedUpgrades" ItemTemplate="{StaticResource PurchaseTemplate}" />
                        </TabItem>
                    </d:TabControl.Items>
                </TabControl>
            </Grid>
        </Border>
        <!--#endregion-->

        <!--#region Buttons-->
        <!--  TODO: set Focusable to False after course ends  -->
        <!--  and maybe find a way to always make the button fit regardless of window size  -->
        <Button
            Name="btn_clicker"
            Grid.Row="1"
            Grid.Column="1"
            Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
            MaxWidth="300"
            MaxHeight="300"
            Margin="20"
            BorderThickness="0"
            Click="btn_clicker_Click"
            Focusable="True"
            FontSize="20"
            Foreground="{StaticResource ForegroundBrush}"
            PreviewMouseLeftButtonDown="btn_clicker_PreviewMouseLeftButtonDown"
            PreviewMouseLeftButtonUp="btn_clicker_PreviewMouseLeftButtonUp"
            RenderTransformOrigin="0.5, 0.5">

            <Button.Resources>
                <Style
                    BasedOn="{StaticResource BasicButtonTemplate}"
                    Resources="{StaticResource FullyRoundedCorners}"
                    TargetType="Button">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.04"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.04"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.02"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.02"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.04"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.04"
                                            Duration="0:0:0.25">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Resources>

            <Button.RenderTransform>
                <ScaleTransform />
            </Button.RenderTransform>
            Click me to get circles!
        </Button>

        <StackPanel
            Grid.Row="2"
            Grid.Column="1"
            VerticalAlignment="Bottom">

            <Label
                Padding="0,0,10,8"
                HorizontalAlignment="Right"
                VerticalAlignment="Top">
                Bulk buy (0 = max)
            </Label>

            <Grid Margin="0,0,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <WrapPanel VerticalAlignment="Center">
                    <Button
                        Name="btn_reincarnate"
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="10,0,0,10"
                        Padding="0"
                        VerticalAlignment="Top"
                        Click="btn_reincarnate_Click"
                        IsEnabled="{Binding CanReincarnate, FallbackValue=False}">

                        <Button.Resources>
                            <Style BasedOn="{StaticResource BasicButtonTemplate}" TargetType="Button">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{StaticResource DimForegroundBrush}" />
                                        <Setter Property="Background" Value="{StaticResource ControlBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Background" Value="{StaticResource SquareBrush}" />
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.GradientStops[0].Color" Duration="0:0:2.5">
                                                        <EasingColorKeyFrame KeyTime="0%" Value="{StaticResource DarkSquareColor}">
                                                            <EasingColorKeyFrame.EasingFunction>
                                                                <QuadraticEase EasingMode="EaseInOut" />
                                                            </EasingColorKeyFrame.EasingFunction>
                                                        </EasingColorKeyFrame>
                                                        <EasingColorKeyFrame KeyTime="100%" Value="{StaticResource SquareColor}">
                                                            <EasingColorKeyFrame.EasingFunction>
                                                                <QuadraticEase EasingMode="EaseInOut" />
                                                            </EasingColorKeyFrame.EasingFunction>
                                                        </EasingColorKeyFrame>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.GradientStops[1].Color" Duration="0:0:2.5">
                                                        <EasingColorKeyFrame KeyTime="0%" Value="{StaticResource SquareColor}">
                                                            <EasingColorKeyFrame.EasingFunction>
                                                                <QuadraticEase EasingMode="EaseInOut" />
                                                            </EasingColorKeyFrame.EasingFunction>
                                                        </EasingColorKeyFrame>
                                                        <EasingColorKeyFrame KeyTime="100%" Value="{StaticResource BrightSquareColor}">
                                                            <EasingColorKeyFrame.EasingFunction>
                                                                <QuadraticEase EasingMode="EaseInOut" />
                                                            </EasingColorKeyFrame.EasingFunction>
                                                        </EasingColorKeyFrame>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Resources>

                        <Grid>
                            <ProgressBar
                                Height="Auto"
                                Margin="0"
                                Foreground="{StaticResource SquareBrush}"
                                Visibility="{Binding ShowReincarnateProgress, FallbackValue=Visible}"
                                Value="{Binding ReincarnateProgress, Mode=OneWay, FallbackValue=50}" />

                            <TextBlock
                                Padding="16,8"
                                VerticalAlignment="Center"
                                Text="{Binding PendingSquaresText, FallbackValue=Reincarnate!}" />
                        </Grid>
                    </Button>

                    <Button
                        Name="btn_leaderboards"
                        Margin="10,0,0,10"
                        VerticalAlignment="Top"
                        Background="{StaticResource TriangleBrush}"
                        Click="btn_leaderboards_Click"
                        Style="{StaticResource BasicButtonTemplate}">
                        Show Leaderboards
                    </Button>

                    <Button
                        Name="btn_admin"
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="10,0,0,10"
                        VerticalAlignment="Top"
                        Click="btn_admin_Click">
                        Open Admin Panel
                    </Button>
                </WrapPanel>

                <controls:IntEntryControl
                    Grid.Column="1"
                    VerticalAlignment="Top"
                    DockPanel.Dock="Right"
                    Maximum="1000"
                    Minimum="{Binding BulkBuyMinimum}"
                    Value="{Binding User.BulkBuy, Mode=TwoWay}" />
            </Grid>
            <!--#endregion-->

            <!--#region Stats & Settings-->
            <Expander
                MaxHeight="{Binding ActualHeight, Converter={StaticResource MultiplierConverter}, ConverterParameter=0.3, FallbackValue=225}"
                Margin="10,-5,0,0"
                d:IsExpanded="True"
                Header="Show Stats &amp; Settings">

                <ScrollViewer Padding="0,0,10,0" VerticalScrollBarVisibility="Auto">
                    <StackPanel>
                        <TextBlock Style="{StaticResource SubtitleStyle}">Stats</TextBlock>

                        <ItemsControl ItemsSource="{x:Static models:ReadOnlyDependency.Instances}">
                            <d:ItemsControl.ItemsSource>
                                <x:Array Type="models:ReadOnlyDependency">
                                    <models:ReadOnlyDependency Name="Circles earned (this incarnation)" />
                                </x:Array>
                            </d:ItemsControl.ItemsSource>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="models:ReadOnlyDependency">
                                    <TextBlock>
                                        <Run Foreground="{StaticResource DimForegroundBrush}" Text="{Binding Name, StringFormat=\{0\}:}" />
                                        <Run Text="{Binding Value, Mode=OneWay, Converter={StaticResource SuffixFormatter}}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <TextBlock Margin="0,10,0,0" Style="{StaticResource SubtitleStyle}">Multipliers</TextBlock>
                        <ItemsControl ItemsSource="{x:Static models:Stat.Instances}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="models:Stat">
                                    <TextBlock>
                                        <Run Foreground="{StaticResource DimForegroundBrush}" Text="{Binding Name, Mode=OneWay, StringFormat=\{0\}:}" />
                                        <Run Text="{Binding DefaultValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SuffixFormatter}, FallbackValue=0.00}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <TextBlock Margin="0,10,0,0" Style="{StaticResource SubtitleStyle}">
                            Settings
                        </TextBlock>
                        <TextBlock Foreground="{StaticResource DimForegroundBrush}" Text="{Binding MusicPlayer.CurrentFile, UpdateSourceTrigger=PropertyChanged, StringFormat=♫ Currently playing: {0}, FallbackValue=Music playback is disabled. The Resources/Music folder may be missing.}" />

                        <ItemsControl
                            Grid.Row="1"
                            Grid.Column="1"
                            d:ItemTemplate="{StaticResource FloatSettingTemplate}"
                            ItemTemplateSelector="{StaticResource SettingDataTemplateSelector}"
                            ItemsSource="{x:Static models:ISetting.Instances}">
                            <d:ItemsControl.ItemsSource>
                                <x:Array Type="models:ISetting">
                                    <models:FloatSetting Name="FloatSetting" />
                                    <models:FloatSetting Name="FloatSetting" />
                                    <models:FloatSetting Name="FloatSetting" />
                                    <models:FloatSetting Name="FloatSetting" />
                                </x:Array>
                            </d:ItemsControl.ItemsSource>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </Expander>
            <!--#endregion-->
        </StackPanel>
    </Grid>
</Window>
